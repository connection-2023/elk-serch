input {
  jdbc {
    jdbc_driver_library => "/usr/share/logstash/logstash-core/lib/jars/postgresql-42.2.27.jre7.jar"
    jdbc_driver_class => "org.postgresql.Driver"
    jdbc_connection_string => "${DB_URL}"
    jdbc_user => "${DB_USER}"
    jdbc_password => "${DB_PASSWORD}"
    jdbc_validate_connection => true
    use_column_value => true 
    tracking_column => "updatedat"    
    tracking_column_type => "timestamp"
    clean_run => false
    jdbc_paging_enabled => true
    jdbc_page_size => 10000
    jdbc_pool_timeout => 300
    schedule => "* * * * *"
    statement => '
      SELECT
        lecturePass."id",
        lecturePass."title",
        lecturePass."price",
        lecturePass."salesCount",
        lecturePass."updatedAt",

         (SELECT json_build_object( 
          \'lecturerId\', lecturer.id,
          \'nickname\', lecturer."nickname",
          \'profileCardImageUrl\', lecturer."profileCardImageUrl" )::text
          FROM "Lecturer" lecturer
          WHERE lecturePass."lecturerId" = lecturer.id AND lecturer."updatedAt" > :sql_last_value) AS lecturer_string,

        (SELECT json_agg(json_build_object( 
            \'lectureId\', lecturePassTarget."lectureId",
            \'title\', lecture."title"
          ))::text
          FROM "LecturePassTarget" lecturePassTarget 
          JOIN "Lecture" lecture ON lecturePassTarget."lectureId" = lecture.id
          WHERE lecturePass.id = lecturePassTarget."lecturePassId" ) AS lecture_pass_target_string

      FROM
        "LecturePass" lecturePass

      WHERE
          lecturePass."isDisabled" = false
          AND
          lecturePass."updatedAt" > :sql_last_value

      '
    last_run_metadata_path =>"/usr/share/logstash/pass-inspector-index.dat"
 }

}

filter {
  json {
    source => "lecture_pass_target_string"
    target => "lecturePassTarget"
  }

  json {
    source => "lecturer_string"
    target => "lecturer"
  } 
  
  mutate {
    remove_field =>["@timestamp", "@version","lecturer_string","lecture_pass_target_string" ]
  }
}

output {
  elasticsearch {
		hosts => ["${ES_SERVER}"]
		user => "elastic"
		password => "test123"
    index => "lecture_pass"
    document_id => "%{id}"
    data_stream => false
    manage_template => true
    # template_overwrite => true
    # template => "/usr/share/logstash/lecture_pass.json"
    template_name => "lecture_pass_template"
	}
  stdout {
    codec => rubydebug
  }
}